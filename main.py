from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, BotCommand, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove

from config import load_config
from inline_keyboard import create_inline_kb
from questions_dir import questions_func

config = load_config('.env')
bot_token = config.token  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é bot_token

bot = Bot(token=bot_token)
dp = Dispatcher()


@dp.message(Command(commands='start'))
async def start(message: Message):
    inline_keyboar = create_inline_kb(1, "start_game")
    await message.answer("–ü—Ä–∏–≤–µ—Ç!üëã\n–Ø - –ö–≤–∏–∑–ë–æ—Ç. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å', —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å —Å–æ –º–Ω–æ–π –≤ –∫–≤–∏–∑!üé∞",
                         reply_markup=inline_keyboar)


@dp.message(Command(commands='contacts'))
async def contacts(message: Message):
    await message.answer("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: egor.kaduba@mail.ru\n–¢–µ–ª–µ–≥—Ä–∞–º–º: @sTeNki_ok")


@dp.message(Command(commands='help'))
async def bot_help(message: Message):
    await message.answer("–ü–æ–∫–∞ —Ç—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –Ω–æ —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è")


@dp.callback_query(F.data.in_('start_game'))
async def start_game(callback: CallbackQuery):
    inline_keyboar = create_inline_kb(3, *questions_func.get_list_category(), last_btn="random_question")
    await callback.message.answer("–í—ã–±–∏—Ä–∞–πü§î", reply_markup=inline_keyboar)


@dp.callback_query(F.data.in_(["programming", "history", "geography", "art", "science", "random_question"]))
async def chek_q(callback: CallbackQuery):
    if callback.data == "random_question":
        question = questions_func.get_random_question()
    else:
        question = questions_func.get_random_question_category(callback.data)
    inline_keyboard = create_inline_kb(1, *question['–≤–∞—Ä–∏–∞–Ω—Ç—ã'])
    await callback.message.answer(question['–≤–æ–ø—Ä–æ—Å'], reply_markup=inline_keyboard)


@dp.callback_query()
async def answer(callback: CallbackQuery):
    question_text = callback.message.text
    choice = callback.data
    for question in questions_func.get_all_questions():
        if question['–≤–æ–ø—Ä–æ—Å'] == question_text and question:
            if question['–≤–∞—Ä–∏–∞–Ω—Ç—ã'][question['–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π_–æ—Ç–≤–µ—Ç']] == choice:
                await callback.answer("–í–µ—Ä–Ω–æ")
                break
            await callback.answer("–ù–µ–≤–µ—Ä–Ω–æ")
            break
    inline_keyword = create_inline_kb(1, 'start_game')
    await callback.message.answer("–°—ã–≥—Ä–∞–µ–º –µ—â—ë —Ä–∞–∑?", reply_markup=inline_keyword)


async def set_main_menu():
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –∫–Ω–æ–ø–∫–∏ menu
    main_menu_commands = [
        BotCommand(command='/help',
                   description='–°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞'),
        BotCommand(command='/contacts',
                   description='–î—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏'),
    ]

    await bot.set_my_commands(main_menu_commands)


dp.startup.register(set_main_menu)
if __name__ == "__main__":
    dp.run_polling(bot)
